<?php

namespace app\controllers;

use app\components\MessageToTelegaApi;
use app\components\MyHelper;
use app\models\Groupstep;
use app\models\Students;
use app\models\Teacher;
use app\models\TelegramSession;
use app\models\TelegramSubscribtion;
use app\models\Timetable;
use Yii;
use yii\helpers\ArrayHelper;
use yii\web\Controller;


class ApiController extends Controller
{
    public function behaviors()
    {
        return [
            'access' => [
                'class' => 'yii\filters\AccessControl',
                'rules' => [
                    [
                        // –ª—é–±–æ–π —ç–∫—à–µ–Ω - –Ω–æ –Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
                        // –µ—Å–ª–∏ —É–∫–∞–∑–∞—Ç—å –Ω—É–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä - –ø–∏—à–∏ –±–∏—Ö–µ–≤–∏—Ä–µ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ–µ—Ä–∞
                        'actions' => ['init', 'webhook'],
                        'allow' => true,
                        'roles' => ['?'],
                    ],

                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
                'denyCallback' => function () {
                    return Yii::$app->response->redirect(['user/login']);
                },
            ],

        ];
    }

    private $telega;
    public $debug = 0;
    public $inline_start_button_menu = [];
    public $subscrbtion_menu = [];
    public $start_menu = [];
    public $today_menu = [];


    // –æ—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è API POST CSRF –ø–∞—Ä–∞–º–µ—Ç—Ä
    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action);
    }

    public function init()
    {
        $this->telega = new MessageToTelegaApi();
        // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        $this->telega->API_KEY = Yii::$app->params['API_KEY'];
        $this->telega->WEBHOOK_URL = Yii::$app->params['WEBHOOK_URL'];
        $this->telega->API_URL = 'https://api.telegram.org/bot' . $this->telega->API_KEY . '/';
        $this->telega->debug = $this->debug;


        parent::init();
    }

    // WebHoook –°–¢–ê–†–´–ô –ë–û–¢ @StepToday
    public function actionInit()
    {
        // –í–ù–ò–ú–ê–ù–ò–ï –≠–¢–û –°–¢–ê–†–´–ô –ë–û–¢
        define('_BOT_NAME', 'StepToday_bot');

        /**
         * –≠–¢–û –î–õ–Ø –¢–ï–°–¢–û–í
         * $a = new MyHelper();
         * $a->actionInit();
         * exit;
         * exit;
         * exit;
         **/
        $this->telega = new MessageToTelegaApi();
        // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        $this->telega->API_KEY = Yii::$app->params['API_KEY0'];
        $this->telega->WEBHOOK_URL = Yii::$app->params['WEBHOOK_URL0'];
        $this->telega->API_URL = 'https://api.telegram.org/bot' . $this->telega->API_KEY . '/';
        $this->telega->debug = $this->debug;
        $this->telega->sendMessageAPI(
            " –ü–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º –±–æ—Ç —Å–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–µ—Ö–∞–ª —Å—é–¥–∞ <a href='https://t.me/ITStepZhitomir_bot'>@ITStepZhitomir_bot</a>
–≠—Ç–æ—Ç –±–æ—Ç StepToday –æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
"
        );
        return;
    }

// WebHoook
    public function actionWebhook()
    {
        define('_BOT_NAME', 'ITStepZhitomir_bot');

        //        // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–º –≤ –∫–æ–Ω—Å—Ç—É—Ä–∫—Ç–æ—Ä–µ
        //        $this->telega->API_KEY = Yii::$app->params['API_KEY0'];
        //        $this->telega->WEBHOOK_URL = Yii::$app->params['WEBHOOK_URL0'];
        //        $this->telega->API_URL = 'https://api.telegram.org/bot' . $this->telega->API_KEY . '/';
        //        $this->telega->debug = $this->debug;


        //  –ú–ï–¢–ö–ê –¢–ï–ö–£–©–ï–ì–û –î–ù–Ø –ß–¢–û –û–¢–û–ë–†–ê–ñ–ê–ï–¢–°–Ø
        $_curr_delta_inc = 0;
        if (
            mb_stripos($this->telega->message_on_webhook, "/today/") === 0 OR mb_stripos($this->telega->message_on_webhook, "/free/") === 0
        ) {
            $_curr_delta_inc = explode('/', $this->telega->message_on_webhook);
            // —É–∫–∞–∑–∞–Ω –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç
            if (isset($_curr_delta_inc[2])) {
                $_curr_delta_inc = $_curr_delta_inc[2] * 1;
            } else {
                // /today
                $_curr_delta_inc = 0;
            }
        }

        //
        $this->inline_start_button_menu =
            [
                ['text' => 'üè† –ì–ª–∞–≤–Ω–∞—è. ‚è± ' . date('H:i:s', time()) . '', 'callback_data' => '/start'],
            ];

        $this->start_menu =
            [
                $this->inline_start_button_menu,
                [
                    ['text' => '-1 –¥–µ–Ω—å', 'callback_data' => '/today/' . ($_curr_delta_inc - 1)],
                    ['text' => '–°–µ–≥–æ–¥–Ω—è üåê ', 'callback_data' => '/today'],
                    ['text' => '+1 –¥–µ–Ω—å', 'callback_data' => '/today/' . ($_curr_delta_inc + 1)],
                ],
                [
                    ['text' => '–ì—Ä—É–ø–ø—ã üë•', 'callback_data' => 'SelectFroup'],
                    ['text' => '–ü—Ä–µ–ø–æ–¥ üë®‚Äçüè´', 'callback_data' => 'SelectTeacher'],
                    ['text' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'callback_data' => '/settings'],
                ]
            ];

        $this->today_menu =
            [
                $this->inline_start_button_menu,
                [
                    ['text' => '-1 –¥–µ–Ω—å', 'callback_data' => '/free/' . ($_curr_delta_inc - 1)],
                    //–°–≤–æ–±–æ–¥–Ω—ã–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
                    ['text' => 'Free üÜì ', 'callback_data' => '/free'],
                    ['text' => '+1 –¥–µ–Ω—å', 'callback_data' => '/free/' . ($_curr_delta_inc + 1)],
                ],
                [
                    ['text' => '-1 –¥–µ–Ω—å', 'callback_data' => '/today/' . ($_curr_delta_inc - 1)],
                    ['text' => '–°–µ–≥–æ–¥–Ω—è üåê ', 'callback_data' => '/today'],
                    ['text' => '+1 –¥–µ–Ω—å', 'callback_data' => '/today/' . ($_curr_delta_inc + 1)],
                ],

            ];


        $this->subscrbtion_menu =
            [
                $this->inline_start_button_menu,
                [
                    ['text' => '–ì—Ä—É–ø–ø—ã üë•', 'callback_data' => 'SelectFroup'],
                    ['text' => '–ü—Ä–µ–ø–æ–¥ üë®‚Äçüè´', 'callback_data' => 'SelectTeacher'],
                ],
                [
                    ['text' => '–í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚ùå', 'callback_data' => '/settings=DelAll'],
                ]
            ];


        /** –ï–°–¢–¨ –ó–ê–ü–†–û–° */
        if ($this->telega->message_on_webhook) {

            /** –ß–ê–¢ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ */
            // –ï–°–õ–ò –ë–æ—Ç–∞ —é–∑–∞–µ—Ç –∫–∞–∫–æ–π—Ç–æ —á–∞—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ - –≥–∞—Å–∏–º –µ–≥–æ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å

            if ($this->catchGroupsubscr() ) {

                //
//                $this->telega->sendMessageAPI(
//                   // "–î–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –î–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–º. <a href='https://t.me/ITStepZhitomir_bot'>ITStepZhitomir_bot</a>"
//                    "..."
//                );
                return;
            }

            /** –ê–î–ú–ò–ù–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ */
            if (mb_stripos($this->telega->message_on_webhook, "/subteachers") === 0) {
                $a = TelegramSubscribtion::find()
                    ->where('teacher_id is not NULL')
                    ->all();
                $m = "–ù–ê –ü–†–ï–ü–û–î–û–í –ü–û–î–ü–ò–°–ê–ù–´:\n";
                $count = 0;

                foreach ($a as $item) {
                    $template = ' * WHO:$who / –ù–ê:<b>$teacher_name</b>' . "\n";
                    $vars = array(
                        '$who' => $item->chat_name,
                        '$chat_id' => $item->chat_id,
                        '$teacher_name' => $item->teacher->name_teacher,
                    );
                    // –æ–±—Ö–æ–¥–∏–º–æ–≥—Ä–∞—á–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
                    $count++;
                    if ($count > 50) {
                        $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                        $m = '';
                        $count = 0;
                    }
                    $m .= strtr($template, $vars);
                }
                $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                return;
            }
            if (mb_stripos($this->telega->message_on_webhook, "/subgroups") === 0) {
                $a = TelegramSubscribtion::find()
                    ->where('group_id is not NULL')
                    ->all();
                $m = "–ù–ê –ì–†–£–ü–ü–´ –ü–û–î–ü–ò–°–ê–ù–´:\n";
                $count = 0;
                foreach ($a as $item) {
                    $template = ' * WHO:$who / –ù–ê:<b>$teacher_name</b>' . "\n";
                    $vars = array(
                        '$who' => $item->chat_name,
                        '$chat_id' => $item->chat_id,
                        '$teacher_name' => $item->group->name_group,
                    );
                    $m .= strtr($template, $vars);

                    // –æ–±—Ö–æ–¥–∏–º–æ–≥—Ä–∞—á–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
                    $count++;
                    if ($count > 50) {
                        $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                        $m = '';
                        $count = 0;
                    }

                }
                $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                return;
            }
            if (mb_stripos($this->telega->message_on_webhook, "/subusers") === 0) {
                $a = TelegramSession::find()
                    //->where('group_id is not NULL')
                    ->orderBy('updated ASC')
                    ->all();
                $m = "–í–°–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:\n";
                $count = 0;
                foreach ($a as $item) {
                    $template = ' * $date <b>$who</b>' . "\n";
                    $vars = array(
                        '$who' => $item->name_chat,
                        '$date' => $item->updated,
                    );
                    $m .= strtr($template, $vars);

                    // –æ–±—Ö–æ–¥–∏–º–æ–≥—Ä–∞—á–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
                    $count++;
                    if ($count > 50) {
                        $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                        $m = '';
                        $count = 0;
                    }
                }
                $this->telega->sendMessageAPI($m . "\n ... /subteachers /subgroups /subusers");
                return;
            }


            /** /START */
            /** DEEP LINKS */
            // –≤—Å–µ–≥–¥–∞ –∏ –≤–µ–¥–µ –ø–µ—Ä–≤—ã–π —á—Ç–±—ã –º–æ–∂
            //–Ω–æ –±—ã–ª–æ –Ω–∞ –Ω–µ–≥–æ –≤—ã–π—Ç–∏ –ø—Ä–∏ –ª—é–±–æ–º —É—Å–ª–æ–≤–∏–∏!!!
            if (mb_stripos($this->telega->message_on_webhook, "/start") === 0) {

                /** DEEP LINKS –ù–ê –ü–†–ï–ü–û–î–í –ò –ì–†–£–ü–ü–´*/
                // —Å–º –Ω–∏–∂–µ –≤ –∫–Ω–æ–ø–∫–∞—Ö —Ç—ã —Å–∞–º –∑–∞–¥–∞–ª —Å—Å—ã–ª–∫—É /start tchr=12=1
                // —Ç–æ –Ω–∞ –≤—Ö–æ–¥–µ —Ç–µ–∫—Å—Ç —Ç–∏–ø–∞ : "text":"\/start tchr=13=1"
                // —Ç–æ –Ω–∞ –≤—Ö–æ–¥–µ —Ç–µ–∫—Å—Ç —Ç–∏–ø–∞ : "text":"\/start tchr=13=1"
                $a = explode(' ', $this->telega->message_on_webhook);
                //
                if (isset($a[1])) {
                    $b = explode('=', $a[1]);
                    if (isset($b[0])) {
                        if (empty($b[2])) $b[2] = 0;


                        // –ï–°–õ–ò –ù–û–ú–ï–† –ø—Ä–µ–ø–æ–¥–∞ –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞–Ω, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –º–µ–Ω—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ù–ï–î–ï–õ—å
                        // chr grp —Ö—ä—Ä–∞–Ω–≥–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –î–û–ë–ê–í–õ–ï–ù–û
                        $menu = [
                            [
                                ['text' => '-1 –Ω–µ–¥. üóì', 'callback_data' => '/start ' . $b[0] . '=' . $b[1] . '=' . ($b[2] - 1)],
                                ['text' => '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è', 'callback_data' => '/start ' . $b[0] . '=' . $b[1] . '=0'],
                                ['text' => '+1 –Ω–µ–¥. üóì', 'callback_data' => '/start ' . $b[0] . '=' . $b[1] . '=' . ($b[2] + 1)],
                            ],
                        ];
                        // —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞, ID –æ–±—ä–µ–∫—Ç–∞, –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
                        $this->showTimeTableForGroupORTeacer($b[0], $b[1], $b[2], $menu);
                        return;
                    }
                }

                /** /START -–ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê*/
                // DEEP LINK –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–Ω –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ /start
                // DEEP LINK –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–Ω –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ /start
                // DEEP LINK –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–Ω –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ /start
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $this->start_menu;
                $tod_ay = "–°–µ–≥–æ–¥–Ω—è <b>" . \app\components\MyHelper::strTime2WeekDay(time()) . " " . \app\components\MyHelper::reverceDateFromAmeric(date("Y-m-d")) . "</b>";


                // –∫–æ—Å—Ç—ã–ª—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–¥–∏–Ω –∑ –≥—É–ø–ø—É –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞
                // –≤—ã–≤–æ–¥–∏–º –Ω–∞ –Ω–µ–¥–µ–ª—é —Ä–∞—Å–ø–∏–∞–Ω–∏–µ —Ç—É—Ç –∂–µ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Å—Ç–≤–∏—è
                $b = $this->helpActionGetStatusbyChat($this->telega->chat_id);
                if (sizeof($b)) {
                    if (isset($b['teachers'])) {
                        // –µ—Å—Ç—å –∂–µ—Ä—Ç–≤–∞ –Ω–∞ –∫–æ–≥–æ –º—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã - –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫–∏ –µ–≥ —Ä—Å–∞–ø–∏—Å–∞–Ω–∏—è
                        // —Å—Å—ã–ª–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤ —Å—Ç–∏–ª–µ DEEP LINK - –∫–∞–∫ –æ–Ω–∏ –ø–æ–ø–∞–¥–∞—é—Ç –Ω–∞–º –∏–∑ JSON
                        // —á—Ç–æ–±—ã –æ –±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –Ω–∏—Ö –±—ã–ª
                        $menu = [
                            [
                                ['text' => '-1 –Ω–µ–¥. üóì', 'callback_data' => '/start tchr=' . array_keys($b['teachers'])[0] . '=-1'],
                                ['text' => '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è', 'callback_data' => '/start tchr=' . array_keys($b['teachers'])[0] . '=0'],
                                ['text' => '+1 –Ω–µ–¥. üóì', 'callback_data' => '/start tchr=' . array_keys($b['teachers'])[0] . '=1'],
                            ],
                        ];
                        $this->telega->keyboard_buttons = array_merge($this->start_menu, $menu);
                        $name = Teacher::findOne([array_keys($b['teachers'])[0]])->name_teacher;
                        $message_subscribed = "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∞–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è <b>" . $name . "</b>";
                        $a = new TimetableController(0, '');
                        $message_subscribed .= $a->helperTeacherTimeTableNowOnMain(array_keys($b['teachers'])[0]);


                    } else if (isset($b['groups'])) {
                        // –µ—Å—Ç—å –∂–µ—Ä—Ç–≤–∞ –Ω–∞ –∫–æ–≥–æ –º—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã - –ø–æ–∫–∞–∂–µ–º –∫–Ω–æ–ø–∫–∏ –µ–≥ —Ä—Å–∞–ø–∏—Å–∞–Ω–∏—è
                        // —Å—Å—ã–ª–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤ —Å—Ç–∏–ª–µ DEEP LINK - –∫–∞–∫ –æ–Ω–∏ –ø–æ–ø–∞–¥–∞—é—Ç –Ω–∞–º –∏–∑ JSON
                        // —á—Ç–æ–±—ã –æ –±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –Ω–∏—Ö –±—ã–ª
                        $menu = [
                            [
                                ['text' => '-1 –Ω–µ–¥. üóì', 'callback_data' => '/start grp=' . array_keys($b['groups'])[0] . '=-1'],
                                ['text' => '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è', 'callback_data' => '/start grp=' . array_keys($b['groups'])[0] . '=0'],
                                ['text' => '+1 –Ω–µ–¥. üóì', 'callback_data' => '/start grp=' . array_keys($b['groups'])[0] . '=1'],
                            ],
                        ];

                        $this->telega->keyboard_buttons = array_merge($this->start_menu, $menu);
                        $name = Groupstep::findOne([array_keys($b['groups'])[0]])->name_group;
                        $message_subscribed = "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∞–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã üë• <b>" . $name . "</b>";
                        $a = new TimetableController(0, '');
                        $message_subscribed .= $a->helperGroupTimeTableNowOnMain(array_keys($b['groups'])[0]);

                        //
                    }


                    Yii::$app->params['message_intro1'] .=
                        "\n" .
                        Yii::$app->params['message_help'] .
                        "\n\n" .
                        $message_subscribed;
                } else {
                    Yii::$app->params['message_intro1'] .= "\n\n" .
                        Yii::$app->params['message_intro2'] . "\n\n" .
                        Yii::$app->params['message_help'] .
                        "\n{$tod_ay}\n\n";
                }
                $this->telega->sendMessageAPI(Yii::$app->params['message_intro1']);


                // –Æ–ó–í–ï–† –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑—É–µ –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç /start –Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –ì–õ–ê–í–ù–ê–Ø —Å –∫–æ–ª–±–µ–∫–æ–º
                // –∞ –≤–ø–µ—Ä–≤—ã–µ –∑–∞—à–µ–ª –Ω–∞ –±–æ—Ç–∞ –∏ –≤—ã–∑–≤–∞–ª –∫–æ–Ω—Ç–µ–∫—Å–Ω–æ–µ –º–µ–Ω—é /start
                // –∑–∞–ø–∏—à–µ–º –µ–≥–æ
                if (!$this->telega->is_callback) {
                    $subscribtion = new TelegramSession();
                    $subscribtion->id_chat = strval($this->telega->chat_id);
                    $subscribtion->name_chat = (strval($this->telega->user_name) == '') ? strval($this->telega->chat_id) : strval($this->telega->user_name);
                    $subscribtion->save();
                }


                return;
            }

            /** /help */
            if (mb_stripos($this->telega->message_on_webhook, "/help") === 0) {
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $this->start_menu;

                $stat_stud_all = Students::find()->count();

                $stat_par_active = Timetable::find()->where('`start_date` > NOW()')->count();
                $stat_par_all = Timetable::find()->count() - $stat_par_active;

                $stat_prepod_all = Teacher::find()->count();
                //$stat_prepod_active = Teacher::find()->joinWith('timetables')->where('start_date > NOW()')->groupBy('teacher_id')->count();
                $stat_prepod_active = Teacher::find()->where('not_in_timetable_today = 0')->count();

                $stat_group_all = Groupstep::find()->count();
                //$stat_group_active = Groupstep::find()->joinWith('timetables')->where('start_date > NOW()')->groupBy('group_id')->count();
                $stat_group_active = Teacher::find()->where('not_in_timetable_today = 0')->count();


                $stat_users_all = TelegramSession::find()->count();

                $stat_users_subsc_prep = TelegramSubscribtion::find()->where('`teacher_id` IS NOT NULL')->groupBy('teacher_id')->count();
                $stat_users_subsc_group = TelegramSubscribtion::find()->where('`group_id` IS NOT NULL')->groupBy('group_id')->count();

                $sub_users_prep = TelegramSubscribtion::find()->where('`teacher_id` IS NOT NULL')->groupBy('chat_id')->count();
                $sub_users_group = TelegramSubscribtion::find()->where('`group_id` IS NOT NULL')->groupBy('chat_id')->count();

                // –ø—Ä–µ–≤—å—é –¥–ª—è —Ö–µ–ª–ø–∞ –Ω–∞ –ø–æ–ª–∏–≥—Ä–∞—Ñ–µ
                $this->telega->disable_web_page_preview = 0;

                //

                $this->telega->sendMessageAPI(
                    "<b>–°–ü–†–ê–í–û–ß–ù–ò–ö</b> 
Bot –∞–¥—Ä–µ—Å @ITStepZhitomir_bot
–í–∞—à ChatID = <b>" . $this->telega->chat_id . "</b>
–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è <a href='https://telegra.ph/ITStepZhitomir-bot-Instrukciya-06-12'>–∑–¥–µ—Å—å</a>

<b>–ü–ê–†–´ –ü–û –í–†–ï–ú–ï–ù–ò:</b>
   ‚Ññ1 09:00-10:20
   ‚Ññ2 10:30-11:50
   ‚Ññ3 12:00-13:20
   ‚Ññ4 13:30-14:50
   ‚Ññ5 15:00-16:20
   ‚Ññ6 16:30-17:50
   ‚Ññ7 18:00-19:20
   ‚Ññ8 19:30-20:50

<b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/—á–∞—Ç–æ–≤: <b>$stat_users_all</b>.
–ü–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:
   <b>$sub_users_prep</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/—á–∞—Ç–æ–≤ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ <b>$stat_users_subsc_prep</b> –ø—Ä–µ–ø–æ–¥.; 
   <b>$sub_users_group</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/—á–∞—Ç–æ–≤ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ <b>$stat_users_subsc_group</b> –≥—Ä—É–ø–ø; 

–í –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ (–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã):
   <b>$stat_par_active</b> –ø–∞—Ä (–∑–∞–≤–µ—Ä—à–µ–Ω–æ <b>$stat_par_all</b> c 15.04.19);
   <b>$stat_stud_all</b> —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—Å–µ–≥–æ;
   <b>$stat_group_active</b> –≥—Ä—É–ø–ø (–≤—Å–µ–≥–æ <b>$stat_group_all</b>);
   <b>$stat_prepod_active</b> –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π (–≤—Å–µ–≥–æ <b>$stat_prepod_all</b>);
 
<b>–†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ò:</b>
 - —Å—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–ø—ã –†–ü–ó–°–¢-–æ161: –û–ª–µ–≥ –°—Ç–∞—Ç–∫–µ–≤–∏—á
 - —Å—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–ø—ã –†–ü–ó–°–¢-–æ161: –ù–∏–∫–∏—Ç–∞ –Æ—Ä—á–µ–Ω–∫–æ
 - —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞: –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å <a href='https://t.me/Nofikoff'>–†—É—Å–ª–∞–Ω –ù–æ–≤–∏–∫–æ–≤</a>
  
 –ñ–¥–µ–º –≤–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è!

");
                return;
            }

            /** TODAY */
            if (mb_stripos($this->telega->message_on_webhook, "/today") === 0) {
                $_curr_delta_inc = explode('/', $this->telega->message_on_webhook);
                // —É–∫–∞–∑–∞–Ω –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç
                if (isset($_curr_delta_inc[2])) {
                    $_curr_delta_inc = $_curr_delta_inc[2] * 1;
                } else {
                    // /today
                    $_curr_delta_inc = 0;
                }

                $time_in_sec = time() + $_curr_delta_inc * 60 * 60 * 24;
                $a = new TimetableController(0, '');
                // —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                $timetable_today = $a->helperToday($time_in_sec);

                $this->telega->keyboard_buttons = $this->today_menu;
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->add_message_start_link = false;
                $this->telega->sendMessageAPI($timetable_today);
                return;
            }

            /** TODAY FREE*/
            if (mb_stripos($this->telega->message_on_webhook, "/free") === 0) {
                $_curr_delta_inc = explode('/', $this->telega->message_on_webhook);
                // —É–∫–∞–∑–∞–Ω –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç
                if (isset($_curr_delta_inc[2])) {
                    $_curr_delta_inc = $_curr_delta_inc[2] * 1;
                } else {
                    // /today
                    $_curr_delta_inc = 0;
                }

                $time_in_sec = time() + $_curr_delta_inc * 60 * 60 * 24;
                $a = new TimetableController(0, '');
                // —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                $timetable_today = $a->helperTodayFree($time_in_sec);

                $this->telega->keyboard_buttons = $this->today_menu;
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->add_message_start_link = false;
                $this->telega->sendMessageAPI($timetable_today);
                return;
            }

            /** SETTINGS */
            /** –ù–ê –ß–¢–û –ü–û–î–ü–ò–°–ê–ù */
            // –≤—Å–µ–≥–¥–∞ –∏ –≤–µ–¥–µ –ø–µ—Ä–≤—ã–π —á—Ç–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–∞ –Ω–µ–≥–æ –≤—ã–π—Ç–∏ –ø—Ä–∏ –ª—é–±–æ–º —É—Å–ª–æ–≤–∏–∏!!!
            if (mb_stripos($this->telega->message_on_webhook, "/settings") === 0) {

                $message = '';
                // –°–ë–†–û–°–ò–¢–¨ –í–°–ï –≠–ö–®–ï–ù
                if (mb_stripos($this->telega->message_on_webhook, "/settings=DelAll") === 0) {
                    $sql = "DELETE FROM `telegram_subscribtion` WHERE  `chat_id` = '" . $this->telega->chat_id . "'";
                    Yii::$app->db->createCommand($sql)->execute();
                    $message .= "\n\n<b>üîï –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!</b>\n\n";
                    // —Å–ø—Ä—è—á–µ–º –∫–Ω–æ–ø–∫—É –í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—á
                    unset($this->subscrbtion_menu[2]);
                } else {

                    //$a = new TelegramSubscribtionController(0, '');
                    $message .= "üõ† <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>. <i>–î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ì—Ä—É–ø–ø—É –∏–ª–∏ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ —Ç–∞–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è.</i>";
                    $message .=
                        " " .
                        Yii::$app->params['_m_notice_2'] .
                        " " .
                        Yii::$app->params['message_help'];

                    $message .= "\n\n" . $this->helpMessageGetStatusbyChat($this->telega->chat_id);
                }

                $this->telega->keyboard_buttons = $this->subscrbtion_menu;
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->add_message_start_link = false;
                $this->telega->sendMessageAPI($message);
                return;
            }


            /** –ì–†–£–ü–ü–´ */
            if (mb_stripos($this->telega->message_on_webhook, "SelectFroup") === 0) {
                //
                $groups = Groupstep::find()
                    ->where("`not_in_timetable_today` = 0")
                    ->orderBy('name_group')
                    ->all();
                $j = -1;
                $i = 0;
                $result = [];
                foreach ($groups as $gr) {
                    if ($i % 3 == 0) $j++;
                    $i++;
                    $result[$j][] = ['text' => $gr->name_group, 'callback_data' => '/start grp=' . $gr->id_group];
                }
                $result = array_merge([$this->inline_start_button_menu], $result, [$this->inline_start_button_menu]);
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $result;
                $this->telega->add_message_start_link = false;
                $this->telega->add_message_notice_see_bottom = false;
                $this->telega->sendMessageAPI(
                    '–ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ <b>–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ</b> - –µ—ë –µ—â–µ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
                );

                return;
            }

            /** –ü–†–ï–ü–û–î–´ */
            if (mb_stripos($this->telega->message_on_webhook, "SelectTeacher") === 0) {
                //
                $groups = Teacher::find()
                    ->where("`not_in_timetable_today` = 0")
                    ->orderBy('name_teacher')
                    ->all();
                $j = -1;
                $i = 0;
                $result = [];
                foreach ($groups as $gr) {
                    if ($i % 3 == 0) $j++;
                    $i++;
                    //–§–ò–û –∏–Ω–∏—Ü–∏–∞–ª—ã
                    $result[$j][] = [
                        'text' => $gr->initioals,
                        'callback_data' => '/start tchr=' . $gr->id_teacher
                    ];
                }
                $result = array_merge([$this->inline_start_button_menu], $result, [$this->inline_start_button_menu]);
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $result;
                $this->telega->add_message_start_link = false;
                $this->telega->add_message_notice_see_bottom = false;
                $this->telega->sendMessageAPI(
                    "–ï—Å–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å <b>–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ</b> - –µ–º—É –µ—â–µ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø–∞—Ä—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"
                );
                return;
            }


            /** –û–¢–ü–ò–°–ö–ê –ü–û–î–ü–ò–°–ö–ê - –ó–ê–û–î–ù–û –ü–û–ö–ê–ó–´–í–ê–ï–ú –¢–ï–£–©–£–Æ –ù–ï–î–ï–õ–Æ*/
            if (mb_stripos($this->telega->message_on_webhook, "Send=") === 0) {
                //—Å—Å—ã–ª–∫–∞ –≤—ã–∏–¥–∞ Send=UnSubscribe=grp=22
                // –î–ï–ô–°–¢–í–ò–ï
                if (sizeof(explode('=', $this->telega->message_on_webhook)) > 1) {
                    //$a = new TelegramSubscribtionController(0, '');
                    $message = $this->NoticeSubcribeUnsubscribe($this->telega->message_on_webhook, $this->telega->chat_id, $this->telega->user_name);
                }

                //–û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –î–ï–ô–°–¢–í–ò–Ø
                //—Å—Å—ã–ª–∫–∞ –≤—ã–∏–¥–∞ Send=UnSubscribe=grp=22
                $d = explode('=', $this->telega->message_on_webhook);
                $menu = [
                    [
                        ['text' => '-1 –Ω–µ–¥. üóì', 'callback_data' => '/start ' . $d[2] . '=' . $d[3] . '=-1'],
                        ['text' => '–≠—Ç–∞ –Ω–µ–¥–µ–ª—è', 'callback_data' => '/start ' . $d[2] . '=' . $d[3] . '=0'],
                        ['text' => '+1 –Ω–µ–¥. üóì', 'callback_data' => '/start ' . $d[2] . '=' . $d[3] . '=1'],
                    ],
                ];
                // —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞, ID –æ–±—ä–µ–∫—Ç–∞, –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
                //$type_group, $id_obj, $week, $menu
                $this->showTimeTableForGroupORTeacer($d[2], $d[3], 0, $menu);

                return;
            }

            /** THE END */
            /** THE END */
            /** THE END */


            // —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
            //            $this->telega->keyboard_type = 'keyboard';
            //            $this->telega->keyboard_buttons = $menu;
            $this->telega->add_message_start_link = true;
            //$this->cleanFlagSecondMenuLevel();
            //$this->removeMenu();
            $this->telega->sendMessageAPI('–ö—Ä—É—Ç–æ! –ù–æ —è –Ω–µ –ø–æ–Ω—è–ª : ' . $this->telega->message_on_webhook);
            return;
            //
        } else {


            /** –ß–ê–¢ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ */
            // –ï–°–õ–ò –ë–æ—Ç–∞ —é–∑–∞–µ—Ç –∫–∞–∫–æ–π—Ç–æ —á–∞—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ - –≥–∞—Å–∏–º –µ–≥–æ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            // –º–æ–ª—á–∏–º - –Ω–∏—á–µ–≥–æ –Ω–µ –≥–æ–≤–æ—Ä–∏–º –µ—Å–ª–∏ –∫—Ç–æ —Ç–æ –≤—ã—à–µ–ª –∏–ª–∏ –∑–∞—à–µ–ª –≤ –≥—Ä–ø—É–ø–ø—É - –æ–±—ã—á–Ω–æ —ç—Ç–∏ –∫–º–Ω–∞–¥—ã —É –Ω–∞—Å –Ω–µ –æ—Ç–ª–∞–≤–ª–∏–≤–∞—é—Ç—Å—è
            if ($this->catchGroupsubscr()) {

//                $this->telega->sendMessageAPI(
//
//                // "–î–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –î–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–º. <a href='https://t.me/ITStepZhitomir_bot'>ITStepZhitomir_bot</a>"
//                    "..."
//                );

                return;
            }


            //—Ç—É—Ç –≤ –ø—Ä–∏–º–µ—Ä–µ —Å—Ç–æ—è–ª apiRequestWebhook - –ù–û –û–ù –ù–ï –†–ê–ë–û–¢–ê–ï–¢ !!!
            //            $this->telega->keyboard_type = 'keyboard';
            //            $this->telega->keyboard_buttons = $menu;
            $this->telega->add_message_start_link = true;
            //$this->cleanFlagSecondMenuLevel();
            //$this->removeMenu();
            $this->telega->sendMessageAPI("–Ø –µ—â–µ —É—á—É—Å—å –∏ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã");
            // –µ—Å–ª–∏ –∫—Ç–æ —Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–µ–±—Ö—É–∫—É –¥–µ—Ä–≥–∞–µ—Ç –±–µ–∑—Ç–æ–ª–∫—É
            // –µ—Å–ª–∏ –∫—Ç–æ —Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–µ–±—Ö—É–∫—É –¥–µ—Ä–≥–∞–µ—Ç –±–µ–∑—Ç–æ–ª–∫—É
            die('Telegram forever!');
            return;
        }
    }


    private function removeMenu()
    {
        $this->telega->keyboard_type = 'remove_keyboard';
        $this->telega->add_message_start_link = false;
        $this->telega->sendMessageAPI('...');
        return;
    }

    function showTimeTableForGroupORTeacer($type_group, $id_obj, $week, $menu)
    {
        switch ($type_group) {

            case 'grp':

                //–æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–µ–∫—É—â–π–∏ —Å—Ç–∞—Ç—É—Å –¥–ª—è —á–∞—Ç–∞ –∏ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏
                if (($subscribtion = TelegramSubscribtion::findOne(['chat_id' => $this->telega->chat_id, 'group_id' => $id_obj])) !== null) {
                    $button = ['text' => '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è ‚ùå', 'callback_data' => 'Send=UnSubscribe=grp=' . $id_obj];
                } else {
                    $button = ['text' => '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è‚ùîÔ∏è', 'callback_data' => 'Send=Subscribe=grp=' . $id_obj];
                }

                $menu = array_merge(
                    [
                        $this->inline_start_button_menu,
                        [
                            $button,
                            ['text' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üõ†', 'callback_data' => '/settings']
                        ]
                    ],
                    $menu);

                $a = new TimetableController(0, '');
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $menu;
                $this->telega->add_message_start_link = false;
                $this->telega->sendMessageAPI(
                    $a->helperGroupTimeTable($id_obj, $week)
                );
                return;

            case 'tchr':

                //–æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–µ–∫—É—â–π–∏ —Å—Ç–∞—Ç—É—Å –¥–ª—è —á–∞—Ç–∞ –∏ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏
                if (($subscribtion = TelegramSubscribtion::findOne(['chat_id' => $this->telega->chat_id, 'teacher_id' => $id_obj])) !== null) {
                    $button = ['text' => '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è ‚ùå', 'callback_data' => 'Send=UnSubscribe=tchr=' . $id_obj];
                } else {
                    $button = ['text' => '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è‚ùîÔ∏è', 'callback_data' => 'Send=Subscribe=tchr=' . $id_obj];
                }
                $menu = array_merge(
                    [
                        $this->inline_start_button_menu,
                        [
                            $button,
                            ['text' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üõ†', 'callback_data' => '/settings']
                        ]
                    ],
                    $menu);


                $a = new TimetableController(0, '');
                $this->telega->keyboard_type = 'inline_keyboard';
                $this->telega->keyboard_buttons = $menu;
                //$this->telega->add_message_start_link = false;
                $this->telega->sendMessageAPI(
                    $a->helperTeacherTimeTable($id_obj, $week)
                );
                return;
        }
    }


    // —Ç—Ä—É –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –ø–æ–¥–æ–ø–∏—Å–∞–Ω–∞
    // —Ñ–æ–ª—Å –¥–ª—è –Ω–æ–≤—ã—Ö –≥—Ä—É–ø–ø –∏ —é–∑–≤–µ—Ä–µ–π
    public function catchGroupsubscr()
    {
        //–µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞
        if (mb_stripos($this->telega->chat_id, "-") === 0) {
            // –µ—Å–ª–∏ –≥—Ä—É–ø–ø –ø–æ–¥–ø–∏—Å–∞–Ω–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –±–ª–æ–∫–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫ —Å–æ–±—â–µ–Ω–∏—è –¥–ª—è —ç–æ—Ç–π –≥—Ä—É–ø–ø—ã
            if (sizeof($this->helpActionGetStatusbyChat($this->telega->chat_id)))
                return true;
        }
        return false;
    }


    public function helpActionGetStatusbyChat($chat_id)
    {
        // —Å–Ω–∏–∑–∏–º –Ω–∞ –≥—Ä—É–∑–∫—É –Ω–∞ –ë–î
        // –≤—ã—Ç–∞—â–∏–º –≤ –ø–∞–º—è—Ç—å —Å–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–æ–≤ –∏ –≥—Ä—É–ø–ø
        $query = Teacher::find()->orderBy('name_teacher ASC')->all();
        $teachers = ArrayHelper::map($query, 'id_teacher', 'name_teacher');
        $query = Groupstep::find()->orderBy('name_group ASC')->all();
        $groups = ArrayHelper::map($query, 'id_group', 'name_group');

        $models = TelegramSubscribtion::findAll(['chat_id' => $chat_id]);
        //–∑–∞–ø–∏—Å—å –ø—Ä–æ —Ç–∏—á–µ—Ä–∞?
        if ($models) {
            $result = [];
            foreach ($models as $model) {
                if ($model->teacher_id) {
                    $result['teachers'][$model->teacher_id] = $teachers[$model->teacher_id];
                } else if ($model->group_id) {
                    $result['groups'][$model->group_id] = $groups[$model->group_id];
                }
            }
            return $result;
        } else {
            return [];
        }
    }


    public function helpMessageGetStatusbyChat($chat_id)
    {
        $search_arr = $this->helpActionGetStatusbyChat($chat_id);
        if (!$search_arr) {
            //–∫–Ω–æ–ø–∫—É –í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            unset($this->subscrbtion_menu[2]);
            return "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.";
        }

        $timetable =
            $this->renderPartial('/telegram-subscribtion/messagegetstatusbychat', [
                'model' => $search_arr,
            ]);
        return $timetable;

    }
    //–ù–ê –≤—Ö–æ–¥–µ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞
    //Notices=Subscribe=grp=2581
    //Notices=UnSubscribe=grp=3333
    public function NoticeSubcribeUnsubscribe($str, $chat_id, $chat_name)
    {
        $a = explode('=', $str);
        $action = $a[1];
        $type_obj = $a[2];
        $id_obj = $a[3];
        //
        switch ($type_obj) {
            case 'grp':
                $name_filed_obj = 'group_id';
                break;
            case 'tchr':
                $name_filed_obj = 'teacher_id';
                break;
        }

        $message = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
        switch ($action) {
            case 'Subscribe':
                $subscribtion = new TelegramSubscribtion();
                $subscribtion->chat_id = $chat_id;
                $subscribtion->chat_name = $chat_name;
                $subscribtion->{$name_filed_obj} = $id_obj;
                if ($subscribtion->save(false))
                    $message = "<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞</b>";
//                else
//                    $message = "–û—à–∏–±–∫–∞. –ù–µ –º–æ–≥—É –ø–æ–¥–ø–∏—Å–∞—Ç—å:
//                '$str'
//                '$chat_id'
//                '$name_filed_obj'
//                '$id_obj'";

                break;
            case 'UnSubscribe':
                if (($subscribtion = TelegramSubscribtion::findOne(['chat_id' => $chat_id, $name_filed_obj => $id_obj])) != null) {
                    $subscribtion->delete();
                    $message = "<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>";
                }
//                else
//                    $message = "–û—à–∏–±–∫–∞. –ù–µ –º–æ–≥—É –æ—Ç–ø–∏—Å–∞—Ç—å:  $str $chat_id";
                break;
        }
        return $message;
    }


    public function helpActionCleanAllSubscr($chat_id)
    {
        $models = TelegramSubscribtion::findAll(['chat_id' => $chat_id]);
        if ($models)
            foreach ($models as $model) {
                $model->delete();
            }
    }


}
